// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here: s1=R+notR.L & s2=R+notR.notL.I
    Not(in=load,out=Notload); 
    Not(in=reset,out=Notreset); 
    And(a=Notreset,b=Notload,out=tmp1);
    And(a=Notreset,b=load,out=tmp2);
    And(a=tmp1,b=inc,out=tmp3);
    Or(a=reset,b=tmp3,out=s2);
    Or(a=reset,b=tmp2,out=s1);

    Or(a=s1,b=s2,out=OrS1S2);
    Mux4Way16(a=RegOut,b=in,c=IncOut,d=false,sel[1]=s2,sel[0]=s1,out=MuxOut);
    Register(in=MuxOut,load=OrS1S2,out=out,out=RegOut);
    Inc16(in=RegOut,out=IncOut);

}
